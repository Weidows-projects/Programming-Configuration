theme: 3
proxyOrder: 0
showNewVersionIcon: false
bypassText: |
  bypass:
    - localhost
    - 127.*
    - 10.*
    - 172.16.*
    - 172.17.*
    - 172.18.*
    - 172.19.*
    - 172.20.*
    - 172.21.*
    - 172.22.*
    - 172.23.*
    - 172.24.*
    - 172.25.*
    - 172.26.*
    - 172.27.*
    - 172.28.*
    - 172.29.*
    - 172.30.*
    - 172.31.*
    - 192.168.*
    - <local>
    - '*.sharepoint.com'
    - 'web.lpan.cc'
    # - '*.epicgames.com'
    # - '*.epicgames.dev'
    - '*.helloimg.com'
    - "login.microsoftonline.com"
    - "*.cygames.jp"
    - "*.epicgames.com"
    # - "*.notion.so"
    - "*.imagehub.cc"
connProfile: true
showNotifications: true
connProxy: 0
connMode: true
hideAfterStartup: true
randomControllerPort: false
editor: 1
iconSpeed: false
systemProxyTypeIndex: 0
pacContentText: >-
  function FindProxyForURL(url, host) {
    return "PROXY 127.0.0.1:%mixed-port%; SOCKS5 127.0.0.1:%mixed-port%; DIRECT;"
  }
shortcutSystemProxy: ""
specifyHttpProxyProtocol: false
runTimeFormat: "hh : mm : ss"
interfaceName: WLAN
childProcessText: |
  processes: # array
trayColorTransparent: true
latencyUrl: ""
lightweightMode: true
showProxyFilter: true
hideUnselectableGroup: true
useSystemEmoji: true
trayOrders:
  - - icon
  - - status
    - traffic
    - text
mixinText: |
  mixin: # object
profileParsersText: >
  # https://docs.cfw.lbyczf.com/contents/parser.html

  parsers: # array
    # - reg: ^.*$ 匹配所有订阅，或  - url: https://example.com/profile.yaml 指定订阅
    - reg: ^.*$
      # 删除服务商提供的策略组和规则
      code: |
        module.exports.parse = (raw, { yaml }) => {
          const rawObj = yaml.parse(raw)
          const groups = []
          const rules = []
          return yaml.stringify({ ...rawObj, 'proxy-groups': groups, rules })
        }
      # 建立自己的配置
      yaml:
        prepend-proxy-groups: # 建立策略组
        # 策略组示例
        # - name: 分组名
        # type: select       # 手动选点
        # url-test     # 自动选择延迟最低的节点
        # fallback     # 节点故障时自动切换下一个
        # laod-balance # 均衡使用分组内的节点
        # url: http://www.gstatic.com/generate_204 # 测试地址 非select类型分组必要
        # interval: 300 # 自动测试间隔时间，单位秒 非select类型分组必要
        # tolerance: 50 # 允许的偏差，节点之间延迟差小于该值不切换 非必要
        # proxies:
        # - 节点名称或其他分组套娃
          - name: 🔰选择节点
            type: select
            url: http://www.gstatic.com/generate_204
            interval: 86400
            proxies:
              - 🤖自动选择
              - 💯负载均衡

          - name: 🔯代理模式(漏网之鱼)
            type: select
            proxies:
              - 🔰选择节点 # 白名单模式，意为「没有命中规则的网络流量，统统使用代理」
              - DIRECT # 黑名单模式，意为「只有命中规则的网络流量，才使用代理」

          - name: 🤖自动选择
            type: url-test
            url: http://www.gstatic.com/generate_204
            interval: 600
            lazy: true
            tolerance: 100

          - name: 💯负载均衡
            type: load-balance
            url: http://www.gstatic.com/generate_204
            interval: 600

          - name: 🛑 广告拦截
            type: select
            proxies:
              - 🔰选择节点
              - DIRECT
              - REJECT

        commands:
          - proxy-groups.(🔰选择节点).proxies.2+[]proxyNames # 向指定策略组添加订阅中的节点名，可使用正则过滤
          - proxy-groups.(🤖自动选择).proxies=[]proxyNames
          - proxy-groups.(💯负载均衡).proxies=[]proxyNames

          # 一些可能用到的正则过滤节点示例，使分组更细致
          # []proxyNames|a                         # 包含a
          # []proxyNames|^(.*)(a|b)+(.*)$          # 包含a或b
          # []proxyNames|^(?=.*a)(?=.*b).*$        # 包含a和b
          # []proxyNames|^((?!b).)*a((?!b).)*$     # 包含a且不包含b
          # []proxyNames|^((?!b|c).)*a((?!b|c).)*$ # 包含a且不包含b或c

        # 添加规则
        prepend-rules: # 规则由上往下遍历，如上面规则已经命中，则不再往下处理
          - RULE-SET,applications,DIRECT
          - DOMAIN,clash.razord.top,DIRECT
          - DOMAIN,yacd.haishan.me,DIRECT
          - RULE-SET,private,DIRECT
          - RULE-SET,reject,🛑 广告拦截
          - RULE-SET,icloud,DIRECT #
          - RULE-SET,apple,DIRECT # 这三个为国内可直连地址，如果希望走代理改为PROXY
          - RULE-SET,google,DIRECT #
          - RULE-SET,tld-not-cn,🔰选择节点
          - RULE-SET,gfw,🔰选择节点
          - RULE-SET,greatfire,🔰选择节点
          - RULE-SET,telegramcidr,🔰选择节点
          - RULE-SET,lancidr,DIRECT
          - RULE-SET,cncidr,DIRECT
          - GEOIP,,DIRECT
          - GEOIP,CN,DIRECT
          - RULE-SET,direct,DIRECT
          - RULE-SET,proxy,🔯代理模式(漏网之鱼)
          - MATCH,🔯代理模式(漏网之鱼) # 规则之外的

        # 添加规则集
        mix-rule-providers:
          reject: # 广告域名列表
            type: http
            behavior: domain
            url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt"
            path: ./ruleset/reject.yaml
            interval: 86400

          icloud: # iCloud 域名列表
            type: http
            behavior: domain
            url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt"
            path: ./ruleset/icloud.yaml
            interval: 86400

          apple: # Apple 在中国大陆可直连的域名列表
            type: http
            behavior: domain
            url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt"
            path: ./ruleset/apple.yaml
            interval: 86400

          google: # Google 在中国大陆可直连的域名列表
            type: http
            behavior: domain
            url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt"
            path: ./ruleset/google.yaml
            interval: 86400

          proxy: # 代理域名列表
            type: http
            behavior: domain
            url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt"
            path: ./ruleset/proxy.yaml
            interval: 86400

          direct: # 直连域名列表
            type: http
            behavior: domain
            url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt"
            path: ./ruleset/direct.yaml
            interval: 86400

          private: # 私有网络专用域名列表
            type: http
            behavior: domain
            url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt"
            path: ./ruleset/private.yaml
            interval: 86400

          gfw: # GFWList 域名列表
            type: http
            behavior: domain
            url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt"
            path: ./ruleset/gfw.yaml
            interval: 86400

          greatfire: # GreatFire 域名列表
            type: http
            behavior: domain
            url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/greatfire.txt"
            path: ./ruleset/greatfire.yaml
            interval: 86400

          tld-not-cn: # 非中国大陆使用的顶级域名列表
            type: http
            behavior: domain
            url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt"
            path: ./ruleset/tld-not-cn.yaml
            interval: 86400

          telegramcidr: # Telegram 使用的 IP 地址列表
            type: http
            behavior: ipcidr
            url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt"
            path: ./ruleset/telegramcidr.yaml
            interval: 86400

          cncidr: # 中国大陆 IP 地址列表
            type: http
            behavior: ipcidr
            url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt"
            path: ./ruleset/cncidr.yaml
            interval: 86400

          lancidr: # 局域网 IP 及保留 IP 地址列表
            type: http
            behavior: ipcidr
            url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt"
            path: ./ruleset/lancidr.yaml
            interval: 86400

          applications: # 需要直连的常见软件列表
            type: http
            behavior: classical
            url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt"
            path: ./ruleset/applications.yaml
            interval: 86400
mixinType: 0
mixinCode: |-
  module.exports.parse = ({ content, name, url }, { yaml, axios, notify }) => {
    return content
  }
shortcutShowHideDashboard: Alt+c
systemTheme: false
hideTrayIcon: false
connShowProcess: true
showTrayProxyDelayIndicator: true
randomMixedPort: false
headersText: |
  headers: # object
